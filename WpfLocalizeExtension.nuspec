<?xml version="1.0"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <version>2.0.0</version>
    <authors>Bernhard Millauer,Uwe Mayer</authors>
    <owners>Bernhard Millauer,Uwe Mayer</owners>
    <licenseUrl>http://wpflocalizeextension.codeplex.com/license</licenseUrl>
    <projectUrl>http://wpflocalizeextension.codeplex.com/</projectUrl>
    <dependencies>
      <dependency id="XAMLMarkupExtensions" version="1.1.3" />
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="WindowsBase" targetFramework="" />
      <frameworkAssembly assemblyName="PresentationCore" targetFramework="" />
      <frameworkAssembly assemblyName="PresentationFramework" targetFramework="" />
      <frameworkAssembly assemblyName="System.Drawing" targetFramework="" />
    </frameworkAssemblies>
    <id>WpfLocalizeExtension</id>
    <title>WPF Localization Extension</title>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <description>LocalizationExtension is a really easy way to localize any type of DependencyProperties or native Properties on DependencyObjects</description>
    <summary>LocalizationExtension is a really easy way to localize any type of DependencyProperties or native Properties on DependencyObjects</summary>
    <releaseNotes>v2.0.0 - breaking changes on the back-end:
* All resource lookup activity is transferred to classes implementing ILocalizationProvider
** New interface ILocalizationProvider for custom providers
** Added AttachedProperty Provider to LocalizeDictionary to enable switching the provider
** Added static AttachedProperty DefaultProvider to LocalizeDictionary to set an application wide provider
** Added ResxLocalizationProvider class
** Transferred DefaultDictionary and DefaultAssembly to ResxLocalizationProvider
** Transferred resource lookup &amp; key parsing to ResxLocalizationProvider
** Assembly and Dict properties on LocExtension are obsolete now
** Get notifications on provider changes and errors
** CSV provider as an example of custom providers
* Get the list of available cultures from LocalizeDictionary
* Added IncludeInvariantCulture flag to LocalizeDictionary</releaseNotes>
    <copyright>Bernhard Millauer, Uwe Mayer</copyright>
    <language>en-US</language>
    <tags>wpf silverlight localization extension globalization resx csv resource language</tags>
  </metadata>
  <files>
    <file src="WPFLocalizeExtension\bin\Release\WPFLocalizeExtension.dll" target="lib\net35\WPFLocalizeExtension.dll" />
    <file src="WPFLocalizeExtension\bin\Release\WPFLocalizeExtension.xml" target="lib\net35\WPFLocalizeExtension.xml" />
    <file src="WPFLocalizeExtension\bin\Release\SLLocalizeExtension.dll" target="lib\sl50\SLLocalizeExtension.dll" />
    <file src="WPFLocalizeExtension\bin\Release\SLLocalizeExtension.XML" target="lib\sl50\SLLocalizeExtension.xml" />
  </files>
</package>